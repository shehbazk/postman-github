{
	"info": {
		"_postman_id": "30f319c2-7c34-42a5-adb5-5c3de770f97e",
		"name": "rickandmortyapi.com-GraphMan",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "character",
			"id": "8028cfd6-504d-4bc4-ae6b-40d60c257333",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query character($id: ID!) {\n  character(id: $id) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    status # The status of the character ('Alive', 'Dead' or 'unknown').\n    species # The species of the character.\n    type # The type or subspecies of the character.\n    gender # The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n    # origin # The character's origin location\n    # location # The character's last known location\n    image # Link to the character's image. All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n    # episode # Episodes in which this character appeared.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"id\": \"0\"\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "characters",
			"id": "81bd0612-2396-4fa6-b861-09f72289a671",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query characters($page: Int, $filter: FilterCharacter) {\n  characters(page: $page, filter: $filter) {\n    __typename\n    # info\n    # results\n  }\n}",
						"variables": "{\n\t\"page\": null,\n\t\"filter\": null\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "charactersByIds",
			"id": "61dc1855-dc9a-4ab5-a72c-a148a282ab02",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query charactersByIds($ids: [ID!]!) {\n  charactersByIds(ids: $ids) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    status # The status of the character ('Alive', 'Dead' or 'unknown').\n    species # The species of the character.\n    type # The type or subspecies of the character.\n    gender # The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n    # origin # The character's origin location\n    # location # The character's last known location\n    image # Link to the character's image. All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n    # episode # Episodes in which this character appeared.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"ids\": [\"0\"]\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "location",
			"id": "c885b8b4-8fdf-489b-a908-65aba439d72b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query location($id: ID!) {\n  location(id: $id) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    type # The type or subspecies of the character.\n    dimension # The dimension in which the location is located.\n    # residents # List of characters who have been last seen in the location.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"id\": \"0\"\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "locations",
			"id": "8cdd2641-e48f-4b63-93a2-a8a81a1bb391",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query locations($page: Int, $filter: FilterLocation) {\n  locations(page: $page, filter: $filter) {\n    __typename\n    # info\n    # results\n  }\n}",
						"variables": "{\n\t\"page\": null,\n\t\"filter\": null\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "locationsByIds",
			"id": "4805f8a9-bf5b-4770-bede-56d4b79050b0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query locationsByIds($ids: [ID!]!) {\n  locationsByIds(ids: $ids) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    type # The type or subspecies of the character.\n    dimension # The dimension in which the location is located.\n    # residents # List of characters who have been last seen in the location.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"ids\": [\"0\"]\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "episode",
			"id": "604f5c1e-686f-4f55-b49c-74c3379294e0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query episode($id: ID!) {\n  episode(id: $id) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    air_date # The air date of the episode.\n    # episode # Episodes in which this character appeared.\n    # characters # List of characters who have been seen in the episode.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"id\": \"0\"\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "episodes",
			"id": "49612207-1f68-4742-a1fb-d097845425f8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query episodes($page: Int, $filter: FilterEpisode) {\n  episodes(page: $page, filter: $filter) {\n    __typename\n    # info\n    # results\n  }\n}",
						"variables": "{\n\t\"page\": null,\n\t\"filter\": null\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "episodesByIds",
			"id": "a314abf1-f243-4f93-8ac8-a82d94a41295",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query episodesByIds($ids: [ID!]!) {\n  episodesByIds(ids: $ids) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    air_date # The air date of the episode.\n    # episode # Episodes in which this character appeared.\n    # characters # List of characters who have been seen in the episode.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": "{\n\t\"ids\": [\"0\"]\n}"
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "New req",
			"id": "34b509a7-15c8-4c95-8eaf-d2518d7d8ebe",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		},
		{
			"name": "Added Request",
			"id": "e20d2c94-431c-4199-873d-f846b65b6555",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query locationsByIds($ids: [ID!]!) {\n  locationsByIds(ids: $ids) {\n    __typename\n    id # The id of the character.\n    name # The name of the character.\n    type # The type or subspecies of the character.\n    dimension # The dimension in which the location is located.\n    # residents # List of characters who have been last seen in the location.\n    created # Time at which the character was created in the database.\n  }\n}",
						"variables": ""
					}
				},
				"url": "https://rickandmortyapi.com/graphql"
			},
			"response": []
		}
	]
}